% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/smcfcs.r
\name{smcfcs}
\alias{smcfcs}
\title{Substantive model compatible fully conditional specification imputation of covariates.}
\usage{
smcfcs(originaldata, smtype, smformula, method, predictorMatrix = NULL,
  m = 5, numit = 10, rjlimit = 1000, noisy = FALSE)
}
\arguments{
\item{originaldata}{The original data frame with missing values.}

\item{smtype}{A string specifying the type of substantive model. Possible
values are "lm", "logistic", "coxph" and "compet".}

\item{smformula}{The formula of the substantive model. For "coxph" substantive
models the left hand side should be of the form "Surv(t,delta)". For "compet"
substantive models, a vector c(timevar,causevar,linpred) should be passed
with the name of the time variable, name of the variable giving the cause of
failure, and a list of linear predictors for each of the cause specific models
(see example).}

\item{method}{A required vector of strings specifying for each variable either
that it does not need to be imputed (""), the type of regression model to be
be used to impute. Possible values are "norm" (normal linear regression),
"logreg" (logistic regression), "poisson" (Poisson regression),
"podds" (proportional odds regression for ordered categorical variables),
"mlogit" (multinomial logistic regression for unordered categorical variables),
or a custom expression which defines a passively imputed variable, e.g.
"x^2" or "x1*x2".}

\item{predictorMatrix}{An optional predictor matrix. If specified, the matrix defines which
covariates will be used as predictors in the imputation models
(the outcome must not be included). The i'th row of the matrix should consist of
0s and 1s, with a 1 in the j'th column indicating the j'th variable be used
as a covariate when imputing the i'th variable. If not specified, when
imputing a given variable, the imputation model covariates are the other
covariates of the substantive model which are partially observed
(but which are not passively imputed) and any fully observed variables (if present).
Note that the outcome variable is implicitly conditioned on by the rejection
sampling scheme used by smcfcs, and should not be specified as a predictor
in the predictor matrix.}

\item{m}{The number of imputed datasets to generate. The default is 5.}

\item{numit}{The number of iterations to run when generating each imputation.
In a (limited) range of simulations good performance was obtained with the
default of 10 iterations. However, particularly when the proportion of missingness
is large, more iterations may be required for convergence to stationarity.}

\item{rjlimit}{Specifies the maximum number of attempts which should be made
when using rejection sampling to draw from imputation models. If the limit is reached
when running a warning will be issued. In this case it is usually advisable to
increase the rjlimit.}

\item{logical}{value indicating whether output should be noisy, which can
be useful for debugging or checking that models being used are as desired.}
}
\value{
a list of data frames containing the multiply imputed datasets.
}
\description{
Multiple imputes missing covariate values using substantive model compatible
fully conditional specification.
}
\details{
smcfcs imputes missing values of covariates using the Substantive Model Compatible
Fully Conditional Specification multiple imputation approach proposed by
Bartlett et al 2014.
}
\examples{
# Imputation for a linear substantive model with quadratic covariate effects. Only
# x which is normally distributed given z has missing values and needs imputing
data(ex_linquad)
imps <- smcfcs(ex_linquad, smtype="lm", smformula="y~z+x+xsq",method=c("","","norm","x^2",""))

# Imputation for a linear substantive model with an interaction. Both x1 and x2
# have missing values. x1 is imputed using normal linear regression, x2 using
# logistic regression.
data(ex_lininter)
imps <- smcfcs.lm(ex_lininter, smtype="lm", smformula="y~x1+x2+x1x2",method=c("","norm","logreg","x1*x2"))
}

