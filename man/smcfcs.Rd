% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/smcfcs.r
\name{smcfcs}
\alias{smcfcs}
\title{Substantive model compatible fully conditional specification imputation of covariates.}
\usage{
smcfcs(originaldata, smtype, smformula, method, predictorMatrix = NULL,
  m = 5, numit = 10, rjlimit = 1000, noisy = FALSE)
}
\arguments{
\item{originaldata}{The original data frame with missing values.}

\item{smtype}{A string specifying the type of substantive model. Possible
values are "lm", "logistic", "coxph" and "compet".}

\item{smformula}{The formula of the substantive model. For "coxph" substantive
models the left hand side should be of the form "Surv(t,delta)". For "compet"
substantive models, a list should be passed consisting of the Cox models
for each cause of failure (see example).}

\item{method}{A required vector of strings specifying for each variable either
that it does not need to be imputed (""), the type of regression model to be
be used to impute. Possible values are "norm" (normal linear regression),
"logreg" (logistic regression), "poisson" (Poisson regression),
"podds" (proportional odds regression for ordered categorical variables),
"mlogit" (multinomial logistic regression for unordered categorical variables),
or a custom expression which defines a passively imputed variable, e.g.
"x^2" or "x1*x2".}

\item{predictorMatrix}{An optional predictor matrix. If specified, the matrix defines which
covariates will be used as predictors in the imputation models
(the outcome must not be included). The i'th row of the matrix should consist of
0s and 1s, with a 1 in the j'th column indicating the j'th variable be used
as a covariate when imputing the i'th variable. If not specified, when
imputing a given variable, the imputation model covariates are the other
covariates of the substantive model which are partially observed
(but which are not passively imputed) and any fully observed variables (if present).
Note that the outcome variable is implicitly conditioned on by the rejection
sampling scheme used by smcfcs, and should not be specified as a predictor
in the predictor matrix.}

\item{m}{The number of imputed datasets to generate. The default is 5.}

\item{numit}{The number of iterations to run when generating each imputation.
In a (limited) range of simulations good performance was obtained with the
default of 10 iterations. However, particularly when the proportion of missingness
is large, more iterations may be required for convergence to stationarity.}

\item{rjlimit}{Specifies the maximum number of attempts which should be made
when using rejection sampling to draw from imputation models. If the limit is reached
when running a warning will be issued. In this case it is usually advisable to
increase the rjlimit.}

\item{noisy}{logical value (default FALSE) indicating whether output should be noisy, which can
be useful for debugging or checking that models being used are as desired.}
}
\value{
a list of data frames containing the multiply imputed datasets.
}
\description{
Multiple imputes missing covariate values using substantive model compatible
fully conditional specification.
}
\details{
smcfcs imputes missing values of covariates using the Substantive Model Compatible
Fully Conditional Specification multiple imputation approach proposed by
Bartlett et al 2014 (see references).

Currently imputation is supported for linear regression ("lm"), logistic
regression ("logistic"), Cox regression for time to event
data ("coxph"), and Cox models for competing risks data. For the latter, a Cox
model is assumed for each cause of failure, and the event indicator should be integer
coded with 0 corresponding to censoring, 1 corresponding to failure from the first
cause etc.

At present, in the case of linear or logistic substantive models the outcome  must
be fully observed, but this will be relaxed in a future version so that missing outcomes
are also imputed.

The function returns a list of imputated datasets. Models (e.g. the substantive model)
can be fitted to each and results combined using Rubin's rules using the mitools
package, as illustrated in the examples.

The development of this package was supported by a UK Medical Research Council
Fellowship (MR/K02180X/1). Part of its development took place while the author was
hosted by the University of Michigan's Department of Biostatistics & Institute for
Social Research.
}
\examples{
#load mitools for fitting models to imputed datasets
library(mitools)

#linear substantive model with quadratic covariate effect
imps <- smcfcs(ex_linquad, smtype="lm", smformula="y~z+x+xsq",method=c("","","norm","x^2",""))
impobj <- imputationList(imps)
models <- with(impobj, lm(y~z+x+xsq))
summary(MIcombine(models))

#include auxiliary variable assuming it is conditionally independent of Y (which it is here)
predMatrix <- array(0, dim=c(ncol(ex_linquad),ncol(ex_linquad)))
predMatrix[3,] <- c(0,1,0,0,1)
imps <- smcfcs(ex_linquad, smtype="lm", smformula="y~z+x+xsq",method=c("","","norm","x^2",""),predictorMatrix=predMatrix)

#interaction model
imps <- smcfcs(ex_lininter, smtype="lm", smformula="y~x1+x2+x1x2",method=c("","norm","logreg","x1*x2"))
impobj <- imputationList(imps)
models <- with(impobj, lm(y~x1+x2+x1x2))
summary(MIcombine(models))

#logistic regression substantive model
imps <- smcfcs(ex_logisticquad, smtype="logistic", smformula="y~z+x+xsq",method=c("","","norm","x^2",""))
impobj <- imputationList(imps)
models <- with(impobj, glm(y~z+x+xsq, family=binomial))
summary(MIcombine(models))

#Cox regression substantive model
imps <- smcfcs(ex_coxquad, smtype="coxph", smformula="Surv(t,delta)~z+x+xsq",method=c("","","","norm","x^2",""))
impobj <- imputationList(imps)
models <- with(impobj, coxph(Surv(t,delta)~z+x+xsq))
summary(MIcombine(models))

#competing risks substantive model
imps <- smcfcs(ex_compet, smtype="compet", smformula=c("Surv(t,d==1)~x1+x2", "Surv(t,d==2)~x1+x2"),method=c("","","logreg","norm"))
impobj <- imputationList(imps)
models <- with(impobj, coxph(Surv(t,d==1)~x1+x2))
summary(MIcombine(models))
models <- with(impobj, coxph(Surv(t,d==2)~x1+x2))
summary(MIcombine(models))
}
\references{
Bartlett JW, Seaman SR, White IR, Carpenter JR. Multiple imputation of covariates
by fully conditional specification: accommodating the substantive model. Statistical Methods
in Medical Research 2014. \url{http://doi.org/10.1177/0962280214521348}
}

